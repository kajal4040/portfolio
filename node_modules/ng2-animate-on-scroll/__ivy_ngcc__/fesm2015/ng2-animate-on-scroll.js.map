{"version":3,"file":"ng2-animate-on-scroll.js","sources":["../../../projects/ng2-animate-on-scroll/src/lib/scroll.service.ts","../../../projects/ng2-animate-on-scroll/src/lib/animate-on-scroll.directive.ts","../../../projects/ng2-animate-on-scroll/src/lib/animate-on-scroll.module.ts","../../../projects/ng2-animate-on-scroll/src/ng2-animate-on-scroll.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, OnDestroy } from \"@angular/core\";\nimport { Observable, Subscription, EMPTY, fromEvent } from \"rxjs\";\n\n@Injectable()\nexport class ScrollService implements OnDestroy {\n  scrollObs: Observable<any>;\n  resizeObs: Observable<any>;\n  pos: number;\n  private scrollSub: Subscription = new Subscription();\n  private resizeSub: Subscription = new Subscription();\n\n  constructor() {\n    // set initial value\n    this.manageScrollPos();\n\n    // create observable that we can subscribe to from component or directive\n    this.scrollObs =\n      typeof window !== \"undefined\" ? fromEvent(window, \"scroll\") : EMPTY;\n\n    // initiate subscription to update values\n    this.scrollSub = this.scrollObs.subscribe(() => this.manageScrollPos());\n\n    // create observable for changes in screen size\n    this.resizeObs =\n      typeof window !== \"undefined\" ? fromEvent(window, \"resize\") : EMPTY;\n\n    // initiate subscription to update values\n    this.resizeSub = this.resizeObs.subscribe(() => this.manageScrollPos());\n  }\n\n  private manageScrollPos(): void {\n    // update service property\n    this.pos = typeof window !== \"undefined\" ? window.pageYOffset : 0;\n  }\n\n  ngOnDestroy(): void {\n    this.scrollSub.unsubscribe();\n    this.resizeSub.unsubscribe();\n  }\n}\n","import {\n  Directive,\n  Input,\n  Renderer2,\n  ElementRef,\n  OnInit,\n  OnDestroy,\n  AfterViewInit,\n} from \"@angular/core\";\nimport { ScrollService } from \"./scroll.service\";\nimport { Subscription } from \"rxjs\";\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: \"[animateOnScroll]\",\n})\nexport class AnimateOnScrollDirective\n  implements OnInit, OnDestroy, AfterViewInit\n{\n  private offsetTop: number;\n  private isVisible: boolean;\n  private winHeight: number;\n  private scrollSub: Subscription = new Subscription();\n  private resizeSub: Subscription = new Subscription();\n\n  private get id(): string {\n    return this.elementRef.nativeElement.id;\n  }\n\n  @Input() animationName: string | null; // use fadeIn as default if not specified, specify null for no animation\n  // Pixel offset from screen bottom to the animated element to determine the start of the animation\n  @Input() offset: number = 80; // for scroll Listener\n  @Input() useScroll?: boolean;\n  @Input() threshold?: number; // for intersection observer only for the time being\n\n  constructor(\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    private scroll: ScrollService\n  ) {}\n\n  ngOnInit(): void {\n    if (!this.animationName) {\n      return;\n    }\n    // default visibility to false\n    this.isVisible = false;\n    this.useScroll = this.useScroll\n      ? this.useScroll\n      : this.useScroll === false\n      ? false\n      : true;\n    this.threshold = this.threshold ? this.threshold || 0.5 : 0.5;\n    // using intersecting observer by default, else fallback to scroll Listener\n    if (\"IntersectionObserver\" in window && this.useScroll) {\n      const options: IntersectionObserverInit = {\n        root: null,\n        threshold: this.threshold,\n        rootMargin: \"0px\",\n      };\n      const observer: IntersectionObserver = new IntersectionObserver(\n        (entries, _) => {\n          entries.forEach((entry) => {\n            if (!entry.isIntersecting) {\n              return;\n            }\n            this.addAnimationClass();\n          });\n        },\n        options\n      );\n      observer.observe(this.elementRef.nativeElement);\n      return;\n    }\n\n    // subscribe to scroll event using service\n    this.scrollSub = this.scroll.scrollObs.subscribe(() =>\n      this.manageVisibility()\n    );\n\n    // subscribe to resize event using service so scrolling position is always accurate\n    this.resizeSub = this.scroll.resizeObs.subscribe(() =>\n      this.manageVisibility()\n    );\n  }\n\n  ngAfterViewInit(): void {\n    // run visibility check initially in case the element is already visible in viewport\n    setTimeout(() => this.manageVisibility(), 1);\n  }\n\n  ngOnDestroy(): void {\n    this.scrollSub.unsubscribe();\n    this.resizeSub.unsubscribe();\n  }\n\n  /**\n   * check for visibility of element in viewport to add animation\n   *\n   * @returns void\n   */\n  private manageVisibility(): void {\n    if (this.isVisible) {\n      // Optimisation; nothing to do if class has already been applied\n      return;\n    }\n\n    // check for window height, may change with a window resize\n    this.getWinHeight();\n\n    // get vertical position for selected element\n    this.getOffsetTop();\n\n    // we should trigger the addition of the animation class a little after getting to the element\n    const scrollTrigger = this.offsetTop + this.offset - this.winHeight;\n\n    // using values updated in service\n    if (this.scroll.pos >= scrollTrigger) {\n      this.addAnimationClass();\n    }\n  }\n\n  /**\n   * utility function to mark element visible and add css class\n   *\n   * @returns void\n   */\n  private addAnimationClass(): void {\n    // stops execution if no class is provided\n    if (!this.animationName) {\n      return;\n    }\n\n    // mark this element visible, we won't remove the class after this\n    this.isVisible = true;\n\n    // use default for animate.css if no value provided\n    this.setClass(this.animationName);\n  }\n\n  /**\n   * utility function to add one or more css classes to element in DOM\n   *\n   * @param  {string} classes\n   * @returns void\n   */\n  private setClass(classes: string): void {\n    for (const c of classes.split(\" \")) {\n      this.renderer.addClass(this.elementRef.nativeElement, c);\n    }\n  }\n\n  /**\n   * get window height utility function\n   *\n   * @returns void\n   */\n  private getWinHeight(): void {\n    this.winHeight = typeof window !== \"undefined\" ? window.innerHeight : 0;\n  }\n\n  /**\n   * get offsetTop value for element\n   *\n   * @returns void\n   */\n  private getOffsetTop(): void {\n    if (\n      typeof this.elementRef.nativeElement.getBoundingClientRect === \"function\"\n    ) {\n      const viewportTop =\n        this.elementRef.nativeElement.getBoundingClientRect().top;\n      const clientTop = this.elementRef.nativeElement.clientTop;\n\n      // get vertical position for selected element\n      this.offsetTop = viewportTop + this.scroll.pos - clientTop;\n    } else {\n      this.offsetTop = 0;\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { AnimateOnScrollDirective } from \"./animate-on-scroll.directive\";\nimport { ScrollService } from \"./scroll.service\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [AnimateOnScrollDirective],\n  exports: [AnimateOnScrollDirective],\n})\nexport class AnimateOnScrollModule {\n  static forRoot(): ModuleWithProviders<AnimateOnScrollModule> {\n    return {\n      ngModule: AnimateOnScrollModule,\n      providers: [ScrollService],\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}