{"version":3,"file":"ng2-animate-on-scroll.js","sources":["../../../projects/ng2-animate-on-scroll/src/lib/scroll.service.ts","../../../projects/ng2-animate-on-scroll/src/lib/animate-on-scroll.directive.ts","../../../projects/ng2-animate-on-scroll/src/lib/animate-on-scroll.module.ts","../../../projects/ng2-animate-on-scroll/src/ng2-animate-on-scroll.ts"],"sourcesContent":["import { Injectable, OnDestroy } from \"@angular/core\";\nimport { Observable, Subscription, EMPTY, fromEvent } from \"rxjs\";\n\n@Injectable()\nexport class ScrollService implements OnDestroy {\n  scrollObs: Observable<any>;\n  resizeObs: Observable<any>;\n  pos: number;\n  private scrollSub: Subscription = new Subscription();\n  private resizeSub: Subscription = new Subscription();\n\n  constructor() {\n    // set initial value\n    this.manageScrollPos();\n\n    // create observable that we can subscribe to from component or directive\n    this.scrollObs =\n      typeof window !== \"undefined\" ? fromEvent(window, \"scroll\") : EMPTY;\n\n    // initiate subscription to update values\n    this.scrollSub = this.scrollObs.subscribe(() => this.manageScrollPos());\n\n    // create observable for changes in screen size\n    this.resizeObs =\n      typeof window !== \"undefined\" ? fromEvent(window, \"resize\") : EMPTY;\n\n    // initiate subscription to update values\n    this.resizeSub = this.resizeObs.subscribe(() => this.manageScrollPos());\n  }\n\n  private manageScrollPos(): void {\n    // update service property\n    this.pos = typeof window !== \"undefined\" ? window.pageYOffset : 0;\n  }\n\n  ngOnDestroy(): void {\n    this.scrollSub.unsubscribe();\n    this.resizeSub.unsubscribe();\n  }\n}\n","import {\n  Directive,\n  Input,\n  Renderer2,\n  ElementRef,\n  OnInit,\n  OnDestroy,\n  AfterViewInit,\n} from \"@angular/core\";\nimport { ScrollService } from \"./scroll.service\";\nimport { Subscription } from \"rxjs\";\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: \"[animateOnScroll]\",\n})\nexport class AnimateOnScrollDirective\n  implements OnInit, OnDestroy, AfterViewInit\n{\n  private offsetTop: number;\n  private isVisible: boolean;\n  private winHeight: number;\n  private scrollSub: Subscription = new Subscription();\n  private resizeSub: Subscription = new Subscription();\n\n  private get id(): string {\n    return this.elementRef.nativeElement.id;\n  }\n\n  @Input() animationName: string | null; // use fadeIn as default if not specified, specify null for no animation\n  // Pixel offset from screen bottom to the animated element to determine the start of the animation\n  @Input() offset: number = 80; // for scroll Listener\n  @Input() useScroll?: boolean;\n  @Input() threshold?: number; // for intersection observer only for the time being\n\n  constructor(\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    private scroll: ScrollService\n  ) {}\n\n  ngOnInit(): void {\n    if (!this.animationName) {\n      return;\n    }\n    // default visibility to false\n    this.isVisible = false;\n    this.useScroll = this.useScroll\n      ? this.useScroll\n      : this.useScroll === false\n      ? false\n      : true;\n    this.threshold = this.threshold ? this.threshold || 0.5 : 0.5;\n    // using intersecting observer by default, else fallback to scroll Listener\n    if (\"IntersectionObserver\" in window && this.useScroll) {\n      const options: IntersectionObserverInit = {\n        root: null,\n        threshold: this.threshold,\n        rootMargin: \"0px\",\n      };\n      const observer: IntersectionObserver = new IntersectionObserver(\n        (entries, _) => {\n          entries.forEach((entry) => {\n            if (!entry.isIntersecting) {\n              return;\n            }\n            this.addAnimationClass();\n          });\n        },\n        options\n      );\n      observer.observe(this.elementRef.nativeElement);\n      return;\n    }\n\n    // subscribe to scroll event using service\n    this.scrollSub = this.scroll.scrollObs.subscribe(() =>\n      this.manageVisibility()\n    );\n\n    // subscribe to resize event using service so scrolling position is always accurate\n    this.resizeSub = this.scroll.resizeObs.subscribe(() =>\n      this.manageVisibility()\n    );\n  }\n\n  ngAfterViewInit(): void {\n    // run visibility check initially in case the element is already visible in viewport\n    setTimeout(() => this.manageVisibility(), 1);\n  }\n\n  ngOnDestroy(): void {\n    this.scrollSub.unsubscribe();\n    this.resizeSub.unsubscribe();\n  }\n\n  /**\n   * check for visibility of element in viewport to add animation\n   *\n   * @returns void\n   */\n  private manageVisibility(): void {\n    if (this.isVisible) {\n      // Optimisation; nothing to do if class has already been applied\n      return;\n    }\n\n    // check for window height, may change with a window resize\n    this.getWinHeight();\n\n    // get vertical position for selected element\n    this.getOffsetTop();\n\n    // we should trigger the addition of the animation class a little after getting to the element\n    const scrollTrigger = this.offsetTop + this.offset - this.winHeight;\n\n    // using values updated in service\n    if (this.scroll.pos >= scrollTrigger) {\n      this.addAnimationClass();\n    }\n  }\n\n  /**\n   * utility function to mark element visible and add css class\n   *\n   * @returns void\n   */\n  private addAnimationClass(): void {\n    // stops execution if no class is provided\n    if (!this.animationName) {\n      return;\n    }\n\n    // mark this element visible, we won't remove the class after this\n    this.isVisible = true;\n\n    // use default for animate.css if no value provided\n    this.setClass(this.animationName);\n  }\n\n  /**\n   * utility function to add one or more css classes to element in DOM\n   *\n   * @param  {string} classes\n   * @returns void\n   */\n  private setClass(classes: string): void {\n    for (const c of classes.split(\" \")) {\n      this.renderer.addClass(this.elementRef.nativeElement, c);\n    }\n  }\n\n  /**\n   * get window height utility function\n   *\n   * @returns void\n   */\n  private getWinHeight(): void {\n    this.winHeight = typeof window !== \"undefined\" ? window.innerHeight : 0;\n  }\n\n  /**\n   * get offsetTop value for element\n   *\n   * @returns void\n   */\n  private getOffsetTop(): void {\n    if (\n      typeof this.elementRef.nativeElement.getBoundingClientRect === \"function\"\n    ) {\n      const viewportTop =\n        this.elementRef.nativeElement.getBoundingClientRect().top;\n      const clientTop = this.elementRef.nativeElement.clientTop;\n\n      // get vertical position for selected element\n      this.offsetTop = viewportTop + this.scroll.pos - clientTop;\n    } else {\n      this.offsetTop = 0;\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { AnimateOnScrollDirective } from \"./animate-on-scroll.directive\";\nimport { ScrollService } from \"./scroll.service\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [AnimateOnScrollDirective],\n  exports: [AnimateOnScrollDirective],\n})\nexport class AnimateOnScrollModule {\n  static forRoot(): ModuleWithProviders<AnimateOnScrollModule> {\n    return {\n      ngModule: AnimateOnScrollModule,\n      providers: [ScrollService],\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}