{"version":3,"file":"ngx-google-analytics.module.d.ts","sources":["ngx-google-analytics.module.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA","sourcesContent":["import { ModuleWithProviders } from '@angular/core';\nimport { IGoogleAnalyticsCommand } from './interfaces/i-google-analytics-command';\n/**\n * Install Google Analytics Tracking code on your environment and configure tracking ID.\n *\n * This module should be a dependency on the highest level module of the application, i.e. AppModule in most use cases.\n */\nexport declare class NgxGoogleAnalyticsModule {\n    /**\n     * You should provide a valid Google TrackingCode. This code will be provided to the entire application by\n     * `NGX_GOOGLE_ANALYTICS_SETTINGS_TOKEN` token. You can inject this code in you components if you like by\n     * use the following injection code `@Inject(NGX_GOOGLE_ANALYTICS_SETTINGS_TOKEN) gaConfig: IGoogleAnalyticsSettings`\n     *\n     * @param trackingCode The Google Tracking Code\n     * @param initCommands When placed, it will run any GA Commands in sequence after setup GA environment.\n     * @param uri When placed, it will change the default js URI to the provided one.\n     * @param enableTracing When true, trace GA tracking errors on production mode.\n     * @param nonce When placed, nonce will be added to script tag.\n     */\n    static forRoot(trackingCode: string, initCommands?: IGoogleAnalyticsCommand[], uri?: string, enableTracing?: boolean, nonce?: string): ModuleWithProviders<NgxGoogleAnalyticsModule>;\n}\n"]}