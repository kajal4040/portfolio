{"version":3,"file":"google-analytics.service.d.ts","sources":["google-analytics.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { IGoogleAnalyticsSettings } from '../interfaces/i-google-analytics-settings';\nimport { GaActionEnum } from '../enums/ga-action.enum';\nimport { GtagFn } from '../types/gtag.type';\nexport declare class GoogleAnalyticsService {\n    private readonly settings;\n    private readonly _document;\n    private readonly _gtag;\n    private get document();\n    constructor(settings: IGoogleAnalyticsSettings, _document: any, _gtag: GtagFn);\n    private throw;\n    /** @todo Change this to `Object.fromEntity()` in the future... */\n    private toKeyValue;\n    /**\n     * Call native GA Tag\n     */\n    gtag(...args: any[]): void;\n    /**\n     * Send an event trigger to GA. It is the same as call:\n     * ```js\n     * gtag('event', 'video_auto_play_start', {\n     *   'event_label': 'My promotional video',\n     *   'event_category': 'video_auto_play'\n     * });\n     * ```\n     *\n     * @param action 'video_auto_play_start'\n     * @param category 'video_auto_play'\n     * @param label 'My promotional video'\n     * @param value An value to measure something\n     */\n    event(action: GaActionEnum | string, category?: string, label?: string, value?: number, interaction?: boolean): void;\n    /**\n     * Send an page view event. This is the same as\n     *\n     * ```js\n     * gtag('config', 'GA_TRACKING_ID', {\n     *   'page_title' : 'Homepage',\n     *   'page_path': '/home'\n     * });\n     * ```\n     *\n     * The tracking ID is injected automatically by Inject Token NGX_GOOGLE_ANALYTICS_SETTINGS_TOKEN\n     *\n     * @param path /home\n     * @param title Homepage\n     * @param location '{ page_location }'\n     * @param options '{ ... custom dimentions }'\n     */\n    pageView(path: string, title?: string, location?: string, options?: Object): void;\n    /**\n     * Send an event to report a App Page View. It is the same as\n     *\n     * ```js\n     * gtag('event', 'screen_view', {\n     *   'app_name': 'myAppName',\n     *   'screen_name' : 'Home'\n     * });\n     *\n     * ```\n     *\n     * @param screen 'screen_name'\n     * @param appName 'app_name'\n     * @param appId 'app_id'\n     * @param appVersion 'app_version'\n     * @param installerId 'app_installer_id'\n     */\n    appView(screen: string, appName: string, appId?: string, appVersion?: string, installerId?: string): void;\n    /**\n     * Defines persistent values on GoogleAnalytics\n     *\n     * @see https://developers.google.com/analytics/devguides/collection/gtagjs/setting-values\n     *\n     * ```js\n     * gtag('set', {\n     *   'currency': 'USD',\n     *   'country': 'US'\n     * });\n     * ```\n     */\n    set(...options: Array<any>): void;\n    /**\n     * Send an event to GA to report an application error. It is the same as\n     *\n     * ```js\n     * gtag('event', 'exception', {\n     *   'description': 'error_description',\n     *   'fatal': false   // set to true if the error is fatal\n     * });\n     * ```\n     *\n     * @param description 'error_description'\n     * @param fatal set to true if the error is fatal\n     */\n    exception(description?: string, fatal?: boolean): void;\n}\n"]}